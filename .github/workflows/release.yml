name: Tauri Build and Release (Desktop + Web)

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'src-tauri/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tauri.conf.json'
      - '.github/workflows/**'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'web'
            os: 'ubuntu-22.04'
            build-command: 'pnpm run build'
            artifact-name: 'web-dist'
            artifact-path: './dist'
          
          - platform: 'linux'
            os: 'ubuntu-22.04' 
            build-command: 'pnpm tauri build --bundles appimage'
            artifact-name: 'linux-artifact'
            artifact-path: 'src-tauri/target/release/bundle/appimage/*.AppImage'

          - platform: 'macos'
            os: 'macos-latest'
            build-command: 'pnpm tauri build --bundles dmg'
            artifact-name: 'macos-artifact'
            artifact-path: 'src-tauri/target/release/bundle/dmg/*.dmg'

          - platform: 'windows'
            os: 'windows-latest'
            build-command: 'pnpm tauri build --bundles msi'
            artifact-name: 'windows-artifact'
            artifact-path: 'src-tauri/target/release/bundle/msi/*.msi'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-22.04' && matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libjavascriptcoregtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        
      - name: Install Dependencies
        run: pnpm install

      - name: Build Command
        run: ${{ matrix.build-command }}
        timeout-minutes: 30

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}

  # --- Job 2: Release (بدون تغییر) ---
  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -sSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Create Release
        run: |
          VERSION="v$(date +'%Y%m%d%H%M%S')"
          gh release create $VERSION ./artifacts/*/* --title "Automated Release $VERSION" --notes "Automated build of version $VERSION"
        env:
          GH_TOKEN: ${{ github.token }}